{"ast":null,"code":"import axios from 'axios';\nexport var REQUEST_QUESTIONS = 'REQUEST_QUESTIONS';\nexport var REQUEST_QUESTIONS_ERROR = 'REQUEST_QUESTIONS_ERROR';\nexport var RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS';\nexport var REQUEST_QUESTION = 'REQUEST_QUESTION';\nexport var REQUEST_QUESTION_ERROR = 'REQUEST_QUESTION_ERROR';\nexport var RECEIVE_QUESTION = 'RECEIVE_QUESTION';\nexport function getQuestions() {\n  return function (dispatch, getState) {\n    var serverlessSurveyUrl = \"https://h8dt4pumdi.execute-api.us-west-2.amazonaws.com/Prod\";\n    dispatch(requestQuestions());\n    console.log(\"requesting questions...\");\n    axios.get(\"\".concat(serverlessSurveyUrl, \"/questions\"), {\n      completed: false\n    }).then(function (result) {\n      console.log(\"received q: \".concat(JSON.stringify(result, null, 4)));\n      dispatch(receiveQuestions(result.data));\n    }).catch(function (err) {\n      dispatch(getQuestionsError(err.message));\n    });\n  };\n}\n\nfunction requestQuestions() {\n  return {\n    type: REQUEST_QUESTIONS\n  };\n}\n\nexport function getQuestionsError(message) {\n  return function (dispatch, getState) {\n    dispatch(requestQuestionsError(message));\n  };\n}\n\nfunction requestQuestionsError(message) {\n  return {\n    type: REQUEST_QUESTIONS_ERROR,\n    message: message\n  };\n}\n\nfunction receiveQuestions(json) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions: json.data\n  };\n}\n\nexport function getQuestion(id) {\n  return function (dispatch, getState) {\n    var apiUrl = \"/\";\n    dispatch(requestQuestion());\n    console.log(\"requesting questions...\");\n    return fetch(\"\".concat(apiUrl, \"/mortgages/lender/$\"), {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      if (response.status >= 400) {\n        throw new Error(\"Bad response from server\");\n      }\n\n      return response.json();\n    }).then(function (json) {\n      return dispatch(recieveQuestion(json));\n    });\n  };\n}\n\nfunction requestQuestion() {\n  return {\n    type: REQUEST_QUESTION\n  };\n}\n\nfunction recieveQuestion(json) {\n  return {\n    type: RECEIVE_QUESTION,\n    json: json\n  };\n}\n\nexport function getQuestionError(message) {\n  return function (dispatch, getState) {\n    dispatch(requestQuestionError(message));\n  };\n}\n\nfunction requestQuestionError(message) {\n  return {\n    type: REQUEST_QUESTION_ERROR,\n    message: message\n  };\n}","map":{"version":3,"sources":["/Users/toks/dev/testbase/survey-serverless/src/actions/survey.js"],"names":["axios","REQUEST_QUESTIONS","REQUEST_QUESTIONS_ERROR","RECEIVE_QUESTIONS","REQUEST_QUESTION","REQUEST_QUESTION_ERROR","RECEIVE_QUESTION","getQuestions","dispatch","getState","serverlessSurveyUrl","requestQuestions","console","log","get","completed","then","result","JSON","stringify","receiveQuestions","data","catch","err","getQuestionsError","message","type","requestQuestionsError","json","questions","getQuestion","id","apiUrl","requestQuestion","fetch","method","headers","response","status","Error","recieveQuestion","getQuestionError","requestQuestionError"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,SAASC,YAAT,GAAwB;AAC7B,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC7B,QAAMC,mBAAmB,GAAG,6DAA5B;AAEAF,IAAAA,QAAQ,CAACG,gBAAgB,EAAjB,CAAR;AAEAC,IAAAA,OAAO,CAACC,GAAR;AAEAb,IAAAA,KAAK,CACFc,GADH,WACUJ,mBADV,iBAC2C;AACvCK,MAAAA,SAAS,EAAE;AAD4B,KAD3C,EAIGC,IAJH,CAIQ,UAAAC,MAAM,EAAI;AACdL,MAAAA,OAAO,CAACC,GAAR,uBAA2BK,IAAI,CAACC,SAAL,CAAeF,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAA3B;AACAT,MAAAA,QAAQ,CAACY,gBAAgB,CAACH,MAAM,CAACI,IAAR,CAAjB,CAAR;AACD,KAPH,EAQGC,KARH,CAQS,UAAAC,GAAG,EAAI;AACZf,MAAAA,QAAQ,CAACgB,iBAAiB,CAACD,GAAG,CAACE,OAAL,CAAlB,CAAR;AACD,KAVH;AAWC,GAlBH;AAmBD;;AAED,SAASd,gBAAT,GAA4B;AAC1B,SAAO;AACLe,IAAAA,IAAI,EAAEzB;AADD,GAAP;AAGD;;AAED,OAAO,SAASuB,iBAAT,CAA2BC,OAA3B,EAAoC;AACzC,SAAO,UAACjB,QAAD,EAAWC,QAAX,EAAwB;AAC7BD,IAAAA,QAAQ,CAACmB,qBAAqB,CAACF,OAAD,CAAtB,CAAR;AACD,GAFD;AAGD;;AAED,SAASE,qBAAT,CAA+BF,OAA/B,EAAwC;AACtC,SAAO;AACLC,IAAAA,IAAI,EAAExB,uBADD;AAELuB,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID;;AAED,SAASL,gBAAT,CAA0BQ,IAA1B,EAAgC;AAC9B,SAAO;AACLF,IAAAA,IAAI,EAAEvB,iBADD;AAEL0B,IAAAA,SAAS,EAAED,IAAI,CAACP;AAFX,GAAP;AAID;;AAED,OAAO,SAASS,WAAT,CAAqBC,EAArB,EAAyB;AAC9B,SAAO,UAACvB,QAAD,EAAWC,QAAX,EAAwB;AAC7B,QAAMuB,MAAM,GAAG,GAAf;AAEAxB,IAAAA,QAAQ,CAACyB,eAAe,EAAhB,CAAR;AAEArB,IAAAA,OAAO,CAACC,GAAR;AACA,WAAOqB,KAAK,WACPF,MADO,0BAEV;AACEG,MAAAA,MAAM,EAAE,KADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFX,KAFU,CAAL,CAQJpB,IARI,CAQC,UAAAqB,QAAQ,EAAI;AAChB,UAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AAC1B,cAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;;AAED,aAAOF,QAAQ,CAACT,IAAT,EAAP;AACD,KAdI,EAeJZ,IAfI,CAeC,UAAAY,IAAI;AAAA,aAAIpB,QAAQ,CAACgC,eAAe,CAACZ,IAAD,CAAhB,CAAZ;AAAA,KAfL,CAAP;AAgBD,GAtBD;AAuBD;;AAED,SAASK,eAAT,GAA2B;AACzB,SAAO;AACLP,IAAAA,IAAI,EAAEtB;AADD,GAAP;AAGD;;AAED,SAASoC,eAAT,CAAyBZ,IAAzB,EAA+B;AAC7B,SAAO;AACLF,IAAAA,IAAI,EAAEpB,gBADD;AAELsB,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID;;AAED,OAAO,SAASa,gBAAT,CAA0BhB,OAA1B,EAAmC;AACxC,SAAO,UAACjB,QAAD,EAAWC,QAAX,EAAwB;AAC7BD,IAAAA,QAAQ,CAACkC,oBAAoB,CAACjB,OAAD,CAArB,CAAR;AACD,GAFD;AAGD;;AAED,SAASiB,oBAAT,CAA8BjB,OAA9B,EAAuC;AACrC,SAAO;AACLC,IAAAA,IAAI,EAAErB,sBADD;AAELoB,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID","sourcesContent":["import axios from 'axios';\n\nexport const REQUEST_QUESTIONS = 'REQUEST_QUESTIONS'\nexport const REQUEST_QUESTIONS_ERROR = 'REQUEST_QUESTIONS_ERROR'\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS'\n\nexport const REQUEST_QUESTION = 'REQUEST_QUESTION'\nexport const REQUEST_QUESTION_ERROR = 'REQUEST_QUESTION_ERROR'\nexport const RECEIVE_QUESTION = 'RECEIVE_QUESTION'\n\nexport function getQuestions() {\n  return (dispatch, getState) => {\n    const serverlessSurveyUrl = \"https://h8dt4pumdi.execute-api.us-west-2.amazonaws.com/Prod\";\n\n    dispatch(requestQuestions());\n\n    console.log(`requesting questions...`);\n\n    axios\n      .get(`${serverlessSurveyUrl}/questions`, {\n        completed: false\n      })\n      .then(result => {\n        console.log(`received q: ${JSON.stringify(result, null, 4)}`);\n        dispatch(receiveQuestions(result.data));\n      })\n      .catch(err => {\n        dispatch(getQuestionsError(err.message));\n      });\n    };\n}\n\nfunction requestQuestions() {\n  return {\n    type: REQUEST_QUESTIONS\n  }\n}\n\nexport function getQuestionsError(message) {\n  return (dispatch, getState) => {\n    dispatch(requestQuestionsError(message));\n  }\n}\n\nfunction requestQuestionsError(message) {\n  return {\n    type: REQUEST_QUESTIONS_ERROR,\n    message: message\n  }\n}\n\nfunction receiveQuestions(json) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions: json.data\n  }\n}\n\nexport function getQuestion(id) {\n  return (dispatch, getState) => {\n    const apiUrl = \"/\";\n\n    dispatch(requestQuestion());\n\n    console.log(`requesting questions...`);\n    return fetch(\n      `${apiUrl}/mortgages/lender/$`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        }\n      })\n      .then(response => {\n        if (response.status >= 400) {\n          throw new Error(\"Bad response from server\");\n        }\n\n        return response.json();\n      })\n      .then(json => dispatch(recieveQuestion(json)))\n  }\n}\n\nfunction requestQuestion() {\n  return {\n    type: REQUEST_QUESTION\n  }\n}\n\nfunction recieveQuestion(json) {\n  return {\n    type: RECEIVE_QUESTION,\n    json\n  }\n}\n\nexport function getQuestionError(message) {\n  return (dispatch, getState) => {\n    dispatch(requestQuestionError(message));\n  }\n}\n\nfunction requestQuestionError(message) {\n  return {\n    type: REQUEST_QUESTION_ERROR,\n    message: message\n  }\n}\n"]},"metadata":{},"sourceType":"module"}