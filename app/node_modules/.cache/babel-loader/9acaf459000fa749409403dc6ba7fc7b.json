{"ast":null,"code":"import _classCallCheck from \"/Users/toks/dev/testbase/survey-serverless/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/toks/dev/testbase/survey-serverless/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/toks/dev/testbase/survey-serverless/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/toks/dev/testbase/survey-serverless/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/toks/dev/testbase/survey-serverless/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/toks/dev/testbase/survey-serverless/app/src/components/Question.js\";\nimport React, { Component } from 'react';\nimport { Button, Grid, Header, Form, Divider, Icon, Progress, Segment } from 'semantic-ui-react';\nimport Option from './Option';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleChange = function (e, _ref) {\n      var value = _ref.value;\n\n      _this.setState({\n        selectedOption: value\n      });\n    };\n\n    _this.handleOptionChange = function (e, value) {\n      _this.setState({\n        selectedOption: value\n      });\n    };\n\n    _this.state = {\n      selectedOption: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          questionNumber = _this$props.questionNumber,\n          question = _this$props.question,\n          totalQuestions = _this$props.totalQuestions;\n      var selectedOption = this.state.selectedOption;\n      var options = question.Options;\n      var optionsItems = options.map(function (option) {\n        return React.createElement(Option, {\n          key: option.Title.toString(),\n          value: option.Title,\n          selectedOption: selectedOption,\n          handleChange: function handleChange(value) {\n            return _this2.handleOptionChange(null, value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        });\n      });\n      return React.createElement(Grid.Row, {\n        style: {\n          maxWidth: 600\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        verticalAlign: \"top\",\n        width: 2,\n        stretched: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        color: \"green\",\n        style: {\n          height: \"15em\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          fontSize: \"5em\",\n          color: \"#3E3E3E\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, questionNumber, \".\"))), React.createElement(Grid.Column, {\n        width: 14,\n        textAlign: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        color: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          fontSize: \"1em\",\n          color: \"grey\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Question \".concat(questionNumber, \" of \").concat(totalQuestions))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, question.Title)), React.createElement(Divider, {\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, optionsItems)), React.createElement(Divider, {\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        basic: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, questionNumber > 1 && React.createElement(Button, {\n        icon: true,\n        labelPosition: \"left\",\n        color: \"grey\",\n        floated: \"left\",\n        onClick: this.props.handleBackClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"BACK\", React.createElement(Icon, {\n        name: \"left arrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), questionNumber <= totalQuestions && React.createElement(Button, {\n        icon: true,\n        labelPosition: \"right\",\n        color: \"orange\",\n        floated: \"right\",\n        onClick: this.props.handleNextClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"NEXT\", React.createElement(Icon, {\n        name: \"right arrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })))), React.createElement(Divider, {\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Progress, {\n        percent: 50,\n        size: \"tiny\",\n        indicating: true,\n        color: \"orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          color: \"grey\",\n          fontSize: \"0.7em\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"50%\")))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/toks/dev/testbase/survey-serverless/app/src/components/Question.js"],"names":["React","Component","Button","Grid","Header","Form","Divider","Icon","Progress","Segment","Option","App","props","handleChange","e","value","setState","selectedOption","handleOptionChange","state","questionNumber","question","totalQuestions","options","Options","optionsItems","map","option","Title","toString","maxWidth","height","fontSize","color","handleBackClicked","handleNextClicked"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Grid, Header, Form, Divider, Icon, Progress, Segment } from 'semantic-ui-react'\nimport Option from './Option'\n\nclass App extends Component {\n  constructor(props) {\n   super(props);\n   this.state = {\n     selectedOption: \"\"\n   };\n }\n\n  handleChange = (e, { value }) => {\n    this.setState({ selectedOption: value });\n  }\n\n  handleOptionChange = (e, value) => {\n    this.setState({ selectedOption: value });\n  }\n\n  render() {\n    let { questionNumber, question, totalQuestions } = this.props;\n    let { selectedOption } = this.state;\n    let options = question.Options;\n\n    const optionsItems = options.map((option) =>\n      <Option key={option.Title.toString()} value={option.Title}\n        selectedOption={selectedOption} handleChange={(value) =>\n        this.handleOptionChange(null, value)} />\n    );\n\n    return (\n        <Grid.Row style={{ maxWidth: 600 }} >\n          <Grid.Column verticalAlign=\"top\" width={2} stretched={true}>\n            <Grid.Row color=\"green\" style={{height: \"15em\"}}>\n              <span style={{fontSize:\"5em\", color: \"#3E3E3E\"}}>{questionNumber}.</span>\n            </Grid.Row>\n          </Grid.Column>\n          <Grid.Column width={14} textAlign=\"left\">\n            <Grid.Row color=\"blue\" >\n              <span style={{fontSize:\"1em\", color: \"grey\"}}>{`Question ${questionNumber} of ${totalQuestions}`}</span>\n            </Grid.Row>\n\n            <Grid.Row>\n              <Header as=\"h1\">{question.Title}</Header>\n            </Grid.Row>\n            <Divider hidden/>\n            <Grid.Row>\n              <Form>\n                {optionsItems}\n              </Form>\n            </Grid.Row>\n            <Divider hidden/>\n            <Grid.Row>\n              <Segment basic>\n                {questionNumber > 1 &&\n                  <Button icon labelPosition='left' color='grey' floated='left' onClick={this.props.handleBackClicked}>\n                    BACK\n                    <Icon name='left arrow' />\n                  </Button>\n                }\n\n                {questionNumber <= totalQuestions &&\n                  <Button icon labelPosition='right' color='orange' floated='right' onClick={this.props.handleNextClicked}>\n                    NEXT\n                    <Icon name='right arrow' />\n                  </Button>\n                }\n              </Segment>\n            </Grid.Row>\n            <Divider hidden/>\n            <Grid.Row>\n              <Progress percent={50} size='tiny' indicating color='orange'>\n                <span style={{color:\"grey\", fontSize: \"0.7em\"}}>50%</span>\n              </Progress>\n            </Grid.Row>\n          </Grid.Column>\n        </Grid.Row>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}